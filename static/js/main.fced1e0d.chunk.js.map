{"version":3,"sources":["food.js","highscores.js","snake.js","App.js","serviceWorker.js","index.js"],"names":["props","style","left","dot","top","className","Fragment","highscores","map","score","i","name","result","scores","key","snakeDots","Firebase","initializeApp","apiKey","authDomain","projectId","db","firestore","scoreTable","collection","App","getRandCoords","Math","floor","random","useState","setSnakeDots","food","setFood","direction","setDirection","speed","setSpeed","gameOver","setGameOver","clicked","setClicked","textField","setTextField","scoreSheet","setScoreSheet","useEffect","getScores","document","addEventListener","handleClick","removeEventListener","e","target","head","length","checkIfEaten","checkOutOfBounds","checkIfCollapsed","snake","pop","forEach","generateFood","enlargeSnake","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","onkeydown","onKeyDown","moveSnake","window","event","keyCode","dots","push","shift","foodCoords","newSnake","unshift","tempScores","get","then","querySnapshot","doc","data","sort","a","b","slice","updateScore","catch","error","console","log","content","onClick","type","onChange","value","placeholder","disabled","add","docRef","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fced1e0d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => {\n    const style = {\n        left: `${props.dot[0]}%`,\n        top: `${props.dot[1]}%`\n    }\n    return(\n        <div className=\"snake-food\" style={style}></div>\n    );\n}","import React from 'react';\n\nexport default (props) => {\n    return(\n        <React.Fragment>\n            {props.highscores.map((score, i) =>{\n                const name = score.name;\n                const result = score.scores;\n                    return(\n                        <tr key={i}>\n                            <td>{name}</td>\n                            <td>{result}</td>\n                        </tr>\n                    )\n                })}\n        </React.Fragment>\n    )\n}","import React from 'react';\n\n\nexport default (props) => {\n    return(\n        <div>\n            {props.snakeDots.map((dot, i) =>{\n                    const style={\n                        left: `${dot[0]}%`,\n                        top: `${dot[1]}%`\n                    }\n                    return(\n                        <div className=\"snake-body\" key={i} style={style}></div>\n                    )\n                })}\n        </div>\n    )\n}","import Firebase from 'firebase';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Food from './food';\nimport Highscore from './highscores';\nimport Snake from './snake';\n\nFirebase.initializeApp({\n  apiKey: 'AIzaSyA8q2eE4_q4TN1TrUEFEAT-YFlr107xHI8',\n  authDomain: 'snake-2183d.firebaseapp.com',\n  projectId: 'snake-2183d',\n});\n\nlet db = Firebase.firestore();\n\nvar scoreTable = db.collection('scores');\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction App() {\n  const getRandCoords = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    return [x, y];\n  };\n  const [snakeDots, setSnakeDots] = useState([\n    [0, 0],\n    [2, 0],\n  ]);\n  const [food, setFood] = useState(getRandCoords);\n  const [direction, setDirection] = useState('RIGHT');\n  const [speed, setSpeed] = useState(200);\n  const [gameOver, setGameOver] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [textField, setTextField] = useState('');\n  const [scoreSheet, setScoreSheet] = useState([]);\n\n  useEffect(() => {\n    getScores();\n  }, [clicked]);\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n\n  const handleClick = (e) => {\n    let clickedDir = e.target.className;\n    switch (clickedDir) {\n      case 'UP':\n        if (direction !== 'DOWN') setDirection('UP');\n        break;\n      case 'DOWN':\n        if (direction !== 'UP') setDirection('DOWN');\n        break;\n      case 'LEFT':\n        if (direction !== 'RIGHT') setDirection('LEFT');\n        break;\n      case 'RIGHT':\n        if (direction !== 'LEFT') setDirection('RIGHT');\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    let head = snakeDots[snakeDots.length - 1];\n    checkIfEaten(head);\n    checkOutOfBounds(head);\n    checkIfCollapsed(head);\n  });\n\n  const checkOutOfBounds = (head) => {\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      setGameOver(true);\n    }\n  };\n\n  const checkIfCollapsed = (head) => {\n    let snake = [...snakeDots];\n    snake.pop();\n    snake.forEach((dot) => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        setGameOver(true);\n      }\n    });\n  };\n\n  const checkIfEaten = (head) => {\n    if (head[0] === food[0] && head[1] === food[1]) {\n      generateFood();\n      enlargeSnake();\n      if (speed > 50) {\n        setSpeed(speed - 10);\n      }\n    }\n  };\n\n  useInterval(() => {\n    document.onkeydown = onKeyDown;\n    moveSnake();\n  }, speed);\n\n  const onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 38:\n        if (direction !== 'DOWN') setDirection('UP');\n        break;\n      case 40:\n        if (direction !== 'UP') setDirection('DOWN');\n        break;\n      case 37:\n        if (direction !== 'RIGHT') setDirection('LEFT');\n        break;\n      case 39:\n        if (direction !== 'LEFT') setDirection('RIGHT');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const moveSnake = () => {\n    let dots = [...snakeDots];\n    let head = dots[dots.length - 1];\n    switch (direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        break;\n      default:\n        break;\n    }\n    dots.push(head);\n    dots.shift();\n    setSnakeDots(dots);\n  };\n\n  const generateFood = () => {\n    let foodCoords = getRandCoords;\n    let snake = [...snakeDots];\n    snake.forEach((dot) => {\n      if (foodCoords[0] === dot[0] && foodCoords[1] === dot[1]) {\n        generateFood();\n      }\n    });\n\n    setFood(foodCoords);\n  };\n\n  const enlargeSnake = () => {\n    let newSnake = [...snakeDots];\n    newSnake.unshift([]);\n    setSnakeDots(newSnake);\n  };\n\n  const restartGame = () => {\n    setClicked(false);\n    setGameOver(false);\n    setSpeed(200);\n    setDirection('RIGHT');\n    setSnakeDots([\n      [0, 0],\n      [2, 0],\n    ]);\n    setFood(getRandCoords);\n    setTextField('');\n  };\n\n  const addScore = () => {\n    if (textField.length < 1) return;\n    setClicked(true);\n    scoreTable\n      .add({\n        name: textField,\n        scores: (snakeDots.length - 2) * 10,\n      })\n      .then(function (docRef) {\n        console.log('Document written with ID: ', docRef.id);\n      })\n      .catch(function (error) {\n        console.error('Error adding document: ', error);\n      });\n  };\n\n  const updateScore = (scoreSheet) => {\n    scoreSheet.sort((a, b) => {\n      return b.scores - a.scores;\n    });\n    scoreSheet = scoreSheet.slice(0, 10);\n    setScoreSheet(scoreSheet);\n  };\n\n  const getScores = () => {\n    let tempScores = [];\n    db.collection('scores')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          tempScores.push(doc.data());\n        });\n        updateScore(tempScores);\n      })\n      .catch(function (error) {\n        console.log('Error getting doc: ', error);\n      });\n  };\n\n  const handleChange = (e) => {\n    if (e.target.value.length <= 15) {\n      setTextField(e.target.value);\n    }\n  };\n\n  let content = (\n    <div>\n      <h3 className=\"score\">Score: {(snakeDots.length - 2) * 10}</h3>\n      <div className=\"game-area\">\n        <Snake snakeDots={snakeDots}></Snake>\n        <Food dot={food}></Food>\n      </div>\n      <h3 className=\"speed\">Speed: {Math.floor(5000 / speed)} km/h</h3>\n      <div className=\"input\">\n        <div className=\"UP\" onClick={handleClick}></div>\n        <div className=\"LEFT\"></div>\n        <div className=\"RIGHT\"></div>\n        <div className=\"DOWN\"></div>\n      </div>\n    </div>\n  );\n\n  if (gameOver) {\n    content = (\n      <div className=\"game-over\">\n        <h1>Game Over.</h1>\n        <h3>Score: {(snakeDots.length - 2) * 10}</h3>\n        <table className=\"highscore-table\">\n          <tbody>\n            <Highscore highscores={scoreSheet}></Highscore>\n          </tbody>\n        </table>\n        <input\n          type=\"text\"\n          className=\"inputName\"\n          onChange={handleChange}\n          placeholder=\"Enter Name:\"\n        ></input>\n        <br />\n        <button onClick={restartGame}>Try Again</button>\n        <button disabled={clicked} onClick={addScore}>\n          Add Score.\n        </button>\n      </div>\n    );\n  }\n\n  return content;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}